# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.81.0"

default_platform :ios

platform :ios do
  before_all do
    @username = "simonas@karuzas.com"
  end

  lane :xcode do
    install_xcode_plugin(github: 'https://github.com/FixIssue/FixCode')
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Gets latest certificates/provisioning profiles"
  lane :certs do
    register_devices(devices_file: "./fastlane/devices.txt")
    match(type: 'adhoc', force_for_new_devices: true, app_identifier: "cat.not.gluon")
    match(type: 'development', force_for_new_devices: true, app_identifier: "cat.not.gluon")
    match(type: 'appstore', app_identifier: "cat.not.gluon")
  end

  desc "Creates new screenshots and uploads them to iTunes Connect"
  lane :screens do
    match(type: "development")
    snapshot
    ENV["DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS"] = "-t DAV"
    deliver(
      submit_for_review: false,
      force: true
    )
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # UI.important "Important Message"
    # UI.error "O NO!"
    # UI.message "Basic blah"
    # answer = UI.select("Would you like to add a Changelog?", ["Yes", "No"])
    # changelog = ask('Type Changelog message:') if answer == "Yes"

    # Do application testing here
    # Very personal process

    # always get latest certificates/provisioning profiles
    # register_devices(devices_file: "./fastlane/devices.txt")
    # match(type: 'adhoc', force_for_new_devices: true, app_identifier: "cat.not.gluon")
    # match(type: 'development', force_for_new_devices: true, app_identifier: "cat.not.gluon")
    # match(type: 'appstore', app_identifier: "cat.not.gluon")

    # Change build number
    increment_build_number(
      xcodeproj: "./ios/Gluon.xcodeproj"
    )

    gym(
      scheme: "Gluon",
      project: "./ios/Gluon.xcodeproj"
      # hypothetically could be a workspace
      # especially if you bring in pods!
      # workspace: "./ios/AppName.xcworkspace"
    )

    # Sometimes itunes email is different!
    ENV["DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS"] = "-t DAV"
    # if changelog
      pilot(username: @username)
    # else
    #   pilot(username: @username, changelog: changelog)
    # end

    # Print reminder of testers
    sh "pilot list -u #{@username}"

  end


  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
